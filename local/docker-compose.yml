version: "3.8"

############################
#  SERVICES
############################
services:
  # ─────────── MongoDB ───────────
  mongodb:
    image: mongo:7
    container_name: boring-media-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: boringmedia
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - bpc-net

  # ─────────── SDK API ───────────
  sdk-service:
    build:
      context: ../sdk
    ports:
      - "5050:5000"  # Changed to 5050 to avoid macOS AirPlay conflict on 5000
    env_file:                
      - .env
    environment:
      API_KEY: ${API_KEY}    
      REGION:  ${REGION}
      MONGODB_URI: mongodb://admin:password@mongodb:27017/boringmedia?authSource=admin
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - bpc-net

  # ───────── Container XDR ────────
  containerxdr-service:
    build:
      context: ../containerxdr
    ports:
      - "8081:8081"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    networks:
      - bpc-net

  # ───────────── UI (TypeScript Edition) ───────────────
  ui:
    build:
      context: ../ui           # uses the new TypeScript UI with Vite
    ports:
      - "8080:80"             # host:container  → browse http://localhost:8080
    depends_on:
      - sdk-service           # ensure backend is up first
      - aichat-service        # ensure AI chat service is up first
      - containerxdr-service  # ensure ContainerXDR is up first
    environment:
      # Runtime base URL for your frontend to call the SDK API **inside** the Docker network
      VITE_API_BASE_URL: http://sdk-service:5000
      VITE_AICHAT_URL: http://aichat-service:5001
      VITE_AI_BASE_URL: http://aichat-service:5001
    volumes:
      # Mount videos directory - separated from UI public folder
      - ../media/videos:/usr/share/nginx/html/videos:ro
    restart: unless-stopped
    networks:
      - bpc-net

  # ───────────── AI Chat Service ───────────────
  aichat-service:
    build:
      context: ../aichat
    ports:
      - "5001:5001"
    depends_on:
      - sdk-service
    environment:
      # Use host machine's Ollama (MUCH faster than Docker Ollama on Mac)
      # Run: ollama start   (in a separate terminal)
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=tinyllama:1.1b-chat  # Use smaller model for faster startup
      - API_KEY=${API_KEY}
      - SDK_URL=http://sdk-service:5000
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Enable access to host machine
    restart: unless-stopped
    networks:
      - bpc-net

############################
#  SHARED NETWORK
############################
networks:
  bpc-net:
    driver: bridge

############################
#  VOLUMES
############################
volumes:
  mongodb_data:
    driver: local
